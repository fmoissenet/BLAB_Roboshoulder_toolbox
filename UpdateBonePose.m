% Author     :   F. Moissenet
%                Biomechanics Laboratory (B-LAB)
%                Geneva University Hospital and University of Geneva
%                https://www.unige.ch/medecine/chiru/fr/b-lab-tests-robotises-avances-de-dispositifs-chirurgicaux/
% License    :   Creative Commons Attribution-NonCommercial 4.0 International License 
%                https://creativecommons.org/licenses/by-nc/4.0/legalcode
% Source code:   To be defined
% Reference  :   To be defined
% Date       :   July 2023
% -------------------------------------------------------------------------
% Description:   Import bony landmarks from FCSV files
% -------------------------------------------------------------------------
% Dependencies : - soder: https://doi.org/10.1016/0021-9290(93)90098-Y
% -------------------------------------------------------------------------
% This work is licensed under the Creative Commons Attribution - 
% NonCommercial 4.0 International License. To view a copy of this license, 
% visit http://creativecommons.org/licenses/by-nc/4.0/ or send a letter to 
% Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
% -------------------------------------------------------------------------

function Bone = UpdateBonePose(Bone,Trial,type,itrial,step,showVertices)

if strcmp(type,'Static')
    n = 1;
else
    n = Trial.n1;
    Bone(1).(type)(itrial).Meshl = [];
    Bone(2).(type)(itrial).Meshl = [];
    Bone(3).(type)(itrial).Meshl = [];
    Bone(4).(type)(itrial).Meshl = [];
end

t2 = 1; % New time index (decreased due to step)
for t = 1:step:n
    
    disp(['Update bone pose: ',num2str(t*100/n),' %']);
    
    frameOfInterest = t;
    
    % ---------------------------------------------------------------------
    % THORAX IN ICS
    % ---------------------------------------------------------------------
    % Define rigid transformation between imaging landmark position and
    % local marker position by singular value decomposition
    markerRange = 13:16;
    [R(:,:,t2),d(:,:,t2),rms(:,:,t2)] = soder([Bone(4).Static.Landmark(1).coordinates'; ...
                                               Bone(4).Static.Landmark(2).coordinates'; ...
                                               Bone(4).Static.Landmark(3).coordinates'; ...
                                               Bone(4).Static.Landmark(4).coordinates'],...
                                              [Trial.Marker(markerRange(1)).Trajectory.processed(:,:,frameOfInterest)'; ...
                                               Trial.Marker(markerRange(2)).Trajectory.processed(:,:,frameOfInterest)'; ...
                                               Trial.Marker(markerRange(3)).Trajectory.processed(:,:,frameOfInterest)'; ...
                                               Trial.Marker(markerRange(4)).Trajectory.processed(:,:,frameOfInterest)']);
    % Landmarks
    for ilandmark = 1:size(Bone(4).Static.Landmark,2)
        Bone(4).(type)(itrial).Landmark(ilandmark).label               = Bone(4).Static.Landmark(ilandmark).label;
        Bone(4).(type)(itrial).Landmark(ilandmark).coordinates(:,:,t2) = R(:,:,t2)*Bone(4).Static.Landmark(ilandmark).coordinates+d(:,:,t2);
    end
    % Objects
    % Vertices
    if showVertices == 1
        Bone(4).(type)(itrial).Meshl.vertices(:,:,t2) = R(:,:,t2)*Bone(4).Static.Meshl.vertices+d(:,:,t2);
    end
    % Segment coordinate system (from static pose)
    Bone(4).(type)(itrial).SCS.O(:,:,t2) = Bone(4).(type)(itrial).Landmark(5).coordinates(:,:,t2);
    Bone(4).(type)(itrial).SCS.X(:,:,t2) = R(:,:,t2)*Bone(4).Static.SCS.X;
    Bone(4).(type)(itrial).SCS.Y(:,:,t2) = R(:,:,t2)*Bone(4).Static.SCS.Y;
    Bone(4).(type)(itrial).SCS.Z(:,:,t2) = R(:,:,t2)*Bone(4).Static.SCS.Z;
    
    % ---------------------------------------------------------------------
    % THORAX IN THORAX SCS
    % ---------------------------------------------------------------------
    % Express in thorax coordinate system
    for ilandmark = 1:size(Bone(4).Static.Landmark,2)
        Bone(4).(type)(itrial).Landmark(ilandmark).coordinates_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                                                Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                                                Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                                                           (Bone(4).(type)(itrial).Landmark(ilandmark).coordinates(:,:,t2)- ...
                                                                            Bone(4).(type)(itrial).SCS.O(:,:,t2)); % In thorax coordinate system
    end
    % Vertices (light mesh, only for visualisation)
    if showVertices == 1
        Bone(4).(type)(itrial).Meshl.faces             = Bone(4).Static.Meshl.faces;
        Bone(4).(type)(itrial).Meshl.vertices_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                              Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                              Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                                             (Bone(4).(type)(itrial).Meshl.vertices(:,:,t2)-Bone(4).(type)(itrial).SCS.O(:,:,t2)); % In thorax coordinate system
    end
    % Segment coordinate system
    Bone(4).(type)(itrial).SCS.O_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                            (Bone(4).(type)(itrial).SCS.O(:,:,t2)- ...
                                             Bone(4).(type)(itrial).SCS.O(:,:,t2)); % In thorax coordinate system
    Bone(4).(type)(itrial).SCS.X_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                            (Bone(4).(type)(itrial).SCS.X(:,:,t2)); % In thorax coordinate system
    Bone(4).(type)(itrial).SCS.Y_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                            (Bone(4).(type)(itrial).SCS.Y(:,:,t2)); % In thorax coordinate system
    Bone(4).(type)(itrial).SCS.Z_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                            (Bone(4).(type)(itrial).SCS.Z(:,:,t2)); % In thorax coordinate system

    % ---------------------------------------------------------------------
    % HUMERUS IN ICS AND THORAX SCS
    % ---------------------------------------------------------------------
    % Define rigid transformation between Imaging landmark position and
    % Mocal marker position by singular value decomposition
    markerRange = 1:4;
    [R(:,:,t2),d(:,:,t2),rms(:,:,t2)] = soder([Bone(1).Static.Landmark(1).coordinates'; ...
                                            Bone(1).Static.Landmark(2).coordinates'; ...
                                            Bone(1).Static.Landmark(3).coordinates'; ...
                                            Bone(1).Static.Landmark(4).coordinates'],...
                                            [Trial.Marker(markerRange(1)).Trajectory.processed(:,:,frameOfInterest)'; ...
                                             Trial.Marker(markerRange(2)).Trajectory.processed(:,:,frameOfInterest)'; ...
                                             Trial.Marker(markerRange(3)).Trajectory.processed(:,:,frameOfInterest)'; ...
                                             Trial.Marker(markerRange(4)).Trajectory.processed(:,:,frameOfInterest)']);
    % Landmarks
    for ilandmark = 1:size(Bone(1).Static.Landmark,2)
        Bone(1).(type)(itrial).Landmark(ilandmark).label                = Bone(1).Static.Landmark(ilandmark).label;
        Bone(1).(type)(itrial).Landmark(ilandmark).coordinates(:,:,t2)   = R(:,:,t2)*Bone(1).Static.Landmark(ilandmark).coordinates+d(:,:,t2);
        Bone(1).(type)(itrial).Landmark(ilandmark).coordinates_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                                               Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                                               Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                                                          (Bone(1).(type)(itrial).Landmark(ilandmark).coordinates(:,:,t2)- ...
                                                                           Bone(4).(type)(itrial).SCS.O(:,:,t2)); % In thorax coordinate system
    end
    % Objects
    Bone(1).(type)(itrial).Object(1).label           = Bone(1).Static.Object(1).label;
    Bone(1).(type)(itrial).Object(1).radius          = Bone(1).Static.Object(1).radius;
    Bone(1).(type)(itrial).Object(1).centre(:,:,t2)   = R(:,:,t2)*Bone(1).Static.Object(1).centre+d(:,:,t2);
    Bone(1).(type)(itrial).Object(1).centre_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                            Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                            Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                                       (Bone(1).(type)(itrial).Object(1).centre(:,:,t2)- ...
                                                        Bone(4).(type)(itrial).SCS.O(:,:,t2)); % In thorax coordinate system  
    % Vertices (light mesh, only for visualisation)
    if showVertices == 1
        Bone(1).(type)(itrial).Meshl.faces             = Bone(1).Static.Meshl.faces;
        Bone(1).(type)(itrial).Meshl.vertices(:,:,t2)   = R(:,:,t2)*Bone(1).Static.Meshl.vertices+d(:,:,t2);
        Bone(1).(type)(itrial).Meshl.vertices_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                              Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                              Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                                         (Bone(1).(type)(itrial).Meshl.vertices(:,:,t2)-Bone(4).(type)(itrial).SCS.O(:,:,t2)); % In thorax coordinate system
    end
    % Segment coordinate system (from static pose)
    Bone(1).(type)(itrial).SCS.O(:,:,t2) = Bone(1).(type)(itrial).Landmark(12).coordinates(:,:,t2);
    Bone(1).(type)(itrial).SCS.X(:,:,t2) = R(:,:,t2)*Bone(1).Static.SCS.X;
    Bone(1).(type)(itrial).SCS.Y(:,:,t2) = R(:,:,t2)*Bone(1).Static.SCS.Y;
    Bone(1).(type)(itrial).SCS.Z(:,:,t2) = R(:,:,t2)*Bone(1).Static.SCS.Z;
    Bone(1).(type)(itrial).SCS.O_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                            (Bone(1).(type)(itrial).SCS.O(:,:,t2)- ...
                                             Bone(4).(type)(itrial).SCS.O(:,:,t2)); % In thorax coordinate system
    Bone(1).(type)(itrial).SCS.X_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                            (Bone(1).(type)(itrial).SCS.X(:,:,t2)); % In thorax coordinate system
    Bone(1).(type)(itrial).SCS.Y_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                            (Bone(1).(type)(itrial).SCS.Y(:,:,t2)); % In thorax coordinate system
    Bone(1).(type)(itrial).SCS.Z_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                            (Bone(1).(type)(itrial).SCS.Z(:,:,t2)); % In thorax coordinate system

    % ---------------------------------------------------------------------
    % CLAVICLE IN ICS AND THORAX SCS
    % ---------------------------------------------------------------------
    % Define rigid transformation between Imaging landmark position and
    % Mocal marker position by singular value decomposition
    markerRange = 9:12;
    [R(:,:,t2),d(:,:,t2),rms(:,:,t2)] = soder([Bone(3).Static.Landmark(1).coordinates'; ...
                                            Bone(3).Static.Landmark(2).coordinates'; ...
                                            Bone(3).Static.Landmark(3).coordinates'; ...
                                            Bone(3).Static.Landmark(4).coordinates'],...
                                           [Trial.Marker(markerRange(1)).Trajectory.processed(:,:,frameOfInterest)'; ...
                                            Trial.Marker(markerRange(2)).Trajectory.processed(:,:,frameOfInterest)'; ...
                                            Trial.Marker(markerRange(3)).Trajectory.processed(:,:,frameOfInterest)'; ...
                                            Trial.Marker(markerRange(4)).Trajectory.processed(:,:,frameOfInterest)']);
    % Landmarks
    for ilandmark = 1:size(Bone(3).Static.Landmark,2)
        Bone(3).(type)(itrial).Landmark(ilandmark).label                = Bone(3).Static.Landmark(ilandmark).label;
        Bone(3).(type)(itrial).Landmark(ilandmark).coordinates(:,:,t2)   = R(:,:,t2)*Bone(3).Static.Landmark(ilandmark).coordinates+d(:,:,t2);
        Bone(3).(type)(itrial).Landmark(ilandmark).coordinates_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                                               Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                                               Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                                                          (Bone(3).(type)(itrial).Landmark(ilandmark).coordinates(:,:,t2)- ...
                                                                           Bone(4).(type)(itrial).SCS.O(:,:,t2)); % In thorax coordinate system
    end
    % Objects
    % Vertices (light mesh, only for visualisation)
    if showVertices == 1
        Bone(3).(type)(itrial).Meshl.faces             = Bone(3).Static.Meshl.faces;
        Bone(3).(type)(itrial).Meshl.vertices(:,:,t2)   = R(:,:,t2)*Bone(3).Static.Meshl.vertices+d(:,:,t2);
        Bone(3).(type)(itrial).Meshl.vertices_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                              Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                              Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                                         (Bone(3).(type)(itrial).Meshl.vertices(:,:,t2)-Bone(4).(type)(itrial).SCS.O(:,:,t2)); % In thorax coordinate system
    end
    % Segment coordinate system (from static pose)
    Bone(3).(type)(itrial).SCS.O(:,:,t2)   = Bone(3).(type)(itrial).Landmark(7).coordinates(:,:,t2);
    Bone(3).(type)(itrial).SCS.X(:,:,t2)   = R(:,:,t2)*Bone(3).Static.SCS.X;
    Bone(3).(type)(itrial).SCS.Y(:,:,t2)   = R(:,:,t2)*Bone(3).Static.SCS.Y;
    Bone(3).(type)(itrial).SCS.Z(:,:,t2)   = R(:,:,t2)*Bone(3).Static.SCS.Z;
    Bone(3).(type)(itrial).SCS.O_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                            (Bone(3).(type)(itrial).SCS.O(:,:,t2)- ...
                                             Bone(4).(type)(itrial).SCS.O(:,:,t2)); % In thorax coordinate system
    Bone(3).(type)(itrial).SCS.X_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                            (Bone(3).(type)(itrial).SCS.X(:,:,t2)); % In thorax coordinate system
    Bone(3).(type)(itrial).SCS.Y_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                            (Bone(3).(type)(itrial).SCS.Y(:,:,t2)); % In thorax coordinate system
    Bone(3).(type)(itrial).SCS.Z_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                            (Bone(3).(type)(itrial).SCS.Z(:,:,t2)); % In thorax coordinate system 

    % ---------------------------------------------------------------------
    % SCAPULA IN ICS AND THORAX SCS
    % ---------------------------------------------------------------------
    % Define rigid transformation between Imaging landmark position and
    % Mocal marker position by singular value decomposition
    markerRange = 5:8;
    [R(:,:,t2),d(:,:,t2),rms(:,:,t2)] = soder([Bone(2).Static.Landmark(1).coordinates'; ...
                                            Bone(2).Static.Landmark(2).coordinates'; ...
                                            Bone(2).Static.Landmark(3).coordinates'; ...
                                            Bone(2).Static.Landmark(4).coordinates'],...
                                           [Trial.Marker(markerRange(1)).Trajectory.processed(:,:,frameOfInterest)'; ...
                                            Trial.Marker(markerRange(2)).Trajectory.processed(:,:,frameOfInterest)'; ...
                                            Trial.Marker(markerRange(3)).Trajectory.processed(:,:,frameOfInterest)'; ...
                                            Trial.Marker(markerRange(4)).Trajectory.processed(:,:,frameOfInterest)']);
    % Landmarks
    for ilandmark = 1:size(Bone(2).Static.Landmark,2)
        Bone(2).(type)(itrial).Landmark(ilandmark).label                = Bone(2).Static.Landmark(ilandmark).label;
        Bone(2).(type)(itrial).Landmark(ilandmark).coordinates(:,:,t2)   = R(:,:,t2)*Bone(2).Static.Landmark(ilandmark).coordinates+d(:,:,t2);
        Bone(2).(type)(itrial).Landmark(ilandmark).coordinates_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                                               Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                                               Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                                                          (Bone(2).(type)(itrial).Landmark(ilandmark).coordinates(:,:,t2)- ...
                                                                           Bone(4).(type)(itrial).SCS.O(:,:,t2)); % In thorax coordinate system
    end  
    % Virtual landmarks (used in the example proposed in ComputeKinematics.m for acromioclavicular joint displacements)
    Bone(2).(type)(itrial).Vlandmark(1).label               = 'RCAJ'; % Point RCAJ defined in the clavicle (acromioclavicular joint point) expressed in scapula coordinate system
    Bone(2).(type)(itrial).Vlandmark(1).coordinate(:,:,t2)   = R(:,:,t2)*Bone(3).Static.Landmark(9).coordinates+d(:,:,t2);
    Bone(2).(type)(itrial).Vlandmark(1).coordinate_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                                   Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                                   Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                                              (Bone(2).(type)(itrial).Vlandmark(1).coordinate(:,:,t2)- ...
                                                               Bone(4).(type)(itrial).SCS.O(:,:,t2)); % In thorax coordinate system       
    % Objects
    Bone(2).(type)(itrial).Object(1).label           = Bone(2).Static.Object(1).label;
    Bone(2).(type)(itrial).Object(1).normal(:,:,t2)   = R(:,:,t2)*Bone(2).Static.Object(1).normal;
    Bone(2).(type)(itrial).Object(1).normal_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                            Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                            Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                                       (Bone(2).(type)(itrial).Object(1).normal(:,:,t2)); % In thorax coordinate system   
    % Vertices (light mesh, only for visualisation)
    if showVertices == 1
        Bone(2).(type)(itrial).Meshl.faces             = Bone(2).Static.Meshl.faces;
        Bone(2).(type)(itrial).Meshl.vertices(:,:,t2)   = R(:,:,t2)*Bone(2).Static.Meshl.vertices+d(:,:,t2);
        Bone(2).(type)(itrial).Meshl.vertices_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                              Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                              Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                                         (Bone(2).(type)(itrial).Meshl.vertices(:,:,t2)-Bone(4).(type)(itrial).SCS.O(:,:,t2)); % In thorax coordinate system
    end
    % Segment coordinate system (from static pose)
    Bone(2).(type)(itrial).SCS.O(:,:,t2) = Bone(2).(type)(itrial).Landmark(7).coordinates(:,:,t2);
    Bone(2).(type)(itrial).SCS.X(:,:,t2) = R(:,:,t2)*Bone(2).Static.SCS.X;
    Bone(2).(type)(itrial).SCS.Y(:,:,t2) = R(:,:,t2)*Bone(2).Static.SCS.Y;
    Bone(2).(type)(itrial).SCS.Z(:,:,t2) = R(:,:,t2)*Bone(2).Static.SCS.Z;
    Bone(2).(type)(itrial).SCS.O_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                            (Bone(2).(type)(itrial).SCS.O(:,:,t2)- ...
                                             Bone(4).(type)(itrial).SCS.O(:,:,t2)); % In thorax coordinate system
    Bone(2).(type)(itrial).SCS.X_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                            (Bone(2).(type)(itrial).SCS.X(:,:,t2)); % In thorax coordinate system
    Bone(2).(type)(itrial).SCS.Y_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                            (Bone(2).(type)(itrial).SCS.Y(:,:,t2)); % In thorax coordinate system
    Bone(2).(type)(itrial).SCS.Z_t(:,:,t2) = inv([Bone(4).(type)(itrial).SCS.X(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Y(:,:,t2) ...
                                                 Bone(4).(type)(itrial).SCS.Z(:,:,t2)])* ...
                                            (Bone(2).(type)(itrial).SCS.Z(:,:,t2)); % In thorax coordinate system   

    t2 = t2+1; % Update time index

end